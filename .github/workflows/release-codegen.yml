name: release-codegen

on:
  push:
    tags:
      - 'codegen-v*'

defaults:
  run:
    shell: bash

jobs:
  generate-parse-y:
    name: generate parse.rs and target/tokens.rs
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.build.target }}
          override: true

      - name: setup bison
        uses: bison-packages/install-bison@v1
        with:
          version: '3.8.2'

      - name: generate parse.rs
        run: make codegen-rust

      - name: save generated tokens.rs
        uses: actions/upload-artifact@v3
        with:
          name: parse.rs
          path: lib-ruby-parser/src/parser/parse.rs

      - name: cbindgen and generate tokens data
        run: make target/tokens.rs

      - name: save generated tokens.rs
        uses: actions/upload-artifact@v3
        with:
          name: tokens.rs
          path: target/tokens.rs

  build:
    name: target = ${{ matrix.build.target }}
    needs: ['generate-parse-y']
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - { os: ubuntu-latest,  exe: ,     target: x86_64-unknown-linux-gnu }
          - { os: macos-latest,   exe: ,     target: x86_64-apple-darwin      }
          - { os: windows-latest, exe: .exe, target: x86_64-pc-windows-msvc   }
          - { os: windows-latest, exe: .exe, target: x86_64-pc-windows-gnu    }
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.build.target }}
          override: true

      - name: download generated parse.rs
        uses: actions/download-artifact@v3
        with:
          name: parse.rs

      - name: download generated tokens.rs
        uses: actions/download-artifact@v3
        with:
          name: tokens.rs

      - run: mv parse.rs lib-ruby-parser/src/parser/parse.rs
      - run: mkdir -p target && mv tokens.rs target/tokens.rs

      - name: codegen all other rust files
        run: cargo build --features "lib-ruby-parser/codegen-rust"

      - name: compile codegen
        run: make create-codegen

      - name: give executable representable name
        run: cp target/release/codegen${{ matrix.build.exe }} ./codegen-${{ matrix.build.target }}${{ matrix.build.exe }}

      - name: upload executable
        uses: actions/upload-artifact@v2
        with:
          name: codegen-${{ matrix.build.target }}${{ matrix.build.exe }}
          path: codegen-${{ matrix.build.target }}${{ matrix.build.exe }}

  make-release:
    name: release
    needs: ['build']
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with: { name: codegen-x86_64-unknown-linux-gnu }

      - uses: actions/download-artifact@v2
        with: { name: codegen-x86_64-apple-darwin }

      - uses: actions/download-artifact@v2
        with: { name: codegen-x86_64-pc-windows-msvc.exe }

      - uses: actions/download-artifact@v2
        with: { name: codegen-x86_64-pc-windows-gnu.exe }

      - run: ls -l

      - name: release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "codegen-*"
          token: ${{ secrets.GITHUB_TOKEN }}
