--INPUT
case foo; in A(x:) then true; end
--LOCATIONS
~~~~ keyword (root)
                              ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                   ~~~~ begin (root -> in_bodies -> 0)
          ~~ keyword (root -> in_bodies -> 0)
          ~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
              ~ begin (root -> in_bodies -> 0 -> pattern)
                 ~ end (root -> in_bodies -> 0 -> pattern)
             ~~~~~ expression (root -> in_bodies -> 0 -> pattern)
             ~ name (root -> in_bodies -> 0 -> pattern -> const)
             ~ expression (root -> in_bodies -> 0 -> pattern -> const)
               ~~ expression (root -> in_bodies -> 0 -> pattern -> pattern)
               ~ name (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 0)
               ~~ expression (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 0)
                        ~~~~ expression (root -> in_bodies -> 0 -> body)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:const_pattern,
      s(:const, nil, "A"),
      s(:hash_pattern,
        s(:match_var, "x"))), nil,
    s(:true)), nil)
