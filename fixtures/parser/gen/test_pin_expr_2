--INPUT
case foo; in ^(0+0) then nil; end
--LOCATIONS
~~~~ keyword (root)
                              ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                    ~~~~ begin (root -> in_bodies -> 0)
          ~~ keyword (root -> in_bodies -> 0)
          ~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
             ~ selector (root -> in_bodies -> 0 -> pattern)
             ~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
              ~ begin (root -> in_bodies -> 0 -> pattern -> var)
                  ~ end (root -> in_bodies -> 0 -> pattern -> var)
              ~~~~~ expression (root -> in_bodies -> 0 -> pattern -> var)
                ~ selector (root -> in_bodies -> 0 -> pattern -> var -> stmts -> 0)
               ~~~ expression (root -> in_bodies -> 0 -> pattern -> var -> stmts -> 0)
               ~ expression (root -> in_bodies -> 0 -> pattern -> var -> stmts -> 0 -> recv)
                 ~ expression (root -> in_bodies -> 0 -> pattern -> var -> stmts -> 0 -> args -> 0)
                         ~~~ expression (root -> in_bodies -> 0 -> body)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:pin,
      s(:begin,
        s(:send,
          s(:int, "0"), "+",
          s(:int, "0")))), nil,
    s(:nil)), nil)
