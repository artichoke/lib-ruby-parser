--INPUT
case foo; in String(*, 1, *) then true; end
--LOCATIONS
~~~~ keyword (root)
                                        ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                             ~~~~ begin (root -> in_bodies -> 0)
          ~~ keyword (root -> in_bodies -> 0)
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
                   ~ begin (root -> in_bodies -> 0 -> pattern)
                           ~ end (root -> in_bodies -> 0 -> pattern)
             ~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
             ~~~~~~ name (root -> in_bodies -> 0 -> pattern -> const)
             ~~~~~~ expression (root -> in_bodies -> 0 -> pattern -> const)
                    ~~~~~~~ expression (root -> in_bodies -> 0 -> pattern -> pattern)
                    ~ operator (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 0)
                    ~ expression (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 0)
                       ~ expression (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 1)
                          ~ operator (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 2)
                          ~ expression (root -> in_bodies -> 0 -> pattern -> pattern -> elements -> 2)
                                  ~~~~ expression (root -> in_bodies -> 0 -> body)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:const_pattern,
      s(:const, nil, "String"),
      s(:find_pattern,
        s(:match_rest),
        s(:int, "1"),
        s(:match_rest))), nil,
    s(:true)), nil)
