--INPUT
while def self.foo; tap do end; end; break; end
--LOCATIONS
                                   ~ begin (root)
                                            ~~~ end (root)
~~~~~ keyword (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
      ~~~ keyword (root -> cond)
              ~ operator (root -> cond)
               ~~~ name (root -> cond)
                                ~~~ end (root -> cond)
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> cond)
          ~~~~ expression (root -> cond -> definee)
                        ~~ begin (root -> cond -> body)
                           ~~~ end (root -> cond -> body)
                    ~~~~~~~~~~ expression (root -> cond -> body)
                    ~~~ selector (root -> cond -> body -> method_call)
                    ~~~ expression (root -> cond -> body -> method_call)
                                     ~~~~~ keyword (root -> body)
                                     ~~~~~ expression (root -> body)
--AST
s(:while,
  s(:defs,
    s(:self), "foo", nil,
    s(:block,
      s(:send, nil, "tap"), nil, nil)),
  s(:break))
