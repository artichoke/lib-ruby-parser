--INPUT
p p{p(p);p p}, tap do end
--LOCATIONS
                   ~~ begin (root)
                      ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
~ selector (root -> method_call)
~~~~~~~~~~~~~~~~~~ expression (root -> method_call)
   ~ begin (root -> method_call -> args -> 0)
            ~ end (root -> method_call -> args -> 0)
  ~~~~~~~~~~~ expression (root -> method_call -> args -> 0)
  ~ selector (root -> method_call -> args -> 0 -> method_call)
  ~ expression (root -> method_call -> args -> 0 -> method_call)
    ~~~~~~~~ expression (root -> method_call -> args -> 0 -> body)
     ~ begin (root -> method_call -> args -> 0 -> body -> stmts -> 0)
       ~ end (root -> method_call -> args -> 0 -> body -> stmts -> 0)
    ~ selector (root -> method_call -> args -> 0 -> body -> stmts -> 0)
    ~~~~ expression (root -> method_call -> args -> 0 -> body -> stmts -> 0)
      ~ selector (root -> method_call -> args -> 0 -> body -> stmts -> 0 -> args -> 0)
      ~ expression (root -> method_call -> args -> 0 -> body -> stmts -> 0 -> args -> 0)
         ~ selector (root -> method_call -> args -> 0 -> body -> stmts -> 1)
         ~~~ expression (root -> method_call -> args -> 0 -> body -> stmts -> 1)
           ~ selector (root -> method_call -> args -> 0 -> body -> stmts -> 1 -> args -> 0)
           ~ expression (root -> method_call -> args -> 0 -> body -> stmts -> 1 -> args -> 0)
               ~~~ selector (root -> method_call -> args -> 1)
               ~~~ expression (root -> method_call -> args -> 1)
--AST
s(:block,
  s(:send, nil, "p",
    s(:block,
      s(:send, nil, "p"), nil,
      s(:begin,
        s(:send, nil, "p",
          s(:send, nil, "p")),
        s(:send, nil, "p",
          s(:send, nil, "p")))),
    s(:send, nil, "tap")), nil, nil)
