--INPUT
case foo; 
        in a: {b:}, c:
          p c
      ; end
--LOCATIONS
~~~~ keyword (root)
                                                        ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                   ~~ keyword (root -> in_bodies -> 0)
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
                      ~~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
                       ~ operator (root -> in_bodies -> 0 -> pattern -> elements -> 0)
                      ~~~~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0)
                      ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> key)
                         ~ begin (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> value)
                            ~ end (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> value)
                         ~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> value)
                          ~ name (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> value -> elements -> 0)
                          ~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> value -> elements -> 0)
                               ~ name (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                               ~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                                            ~ selector (root -> in_bodies -> 0 -> body)
                                            ~~~ expression (root -> in_bodies -> 0 -> body)
                                              ~ expression (root -> in_bodies -> 0 -> body -> args -> 0)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:hash_pattern,
      s(:pair,
        s(:sym, "a"),
        s(:hash_pattern,
          s(:match_var, "b"))),
      s(:match_var, "c")), nil,
    s(:send, nil, "p",
      s(:lvar, "c"))), nil)
