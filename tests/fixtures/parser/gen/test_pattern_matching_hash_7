--INPUT
case foo; in a: 1, b: 2 then true; end
--LOCATIONS
~~~~ keyword (root)
                                   ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                        ~~~~ begin (root -> in_bodies -> 0)
          ~~ keyword (root -> in_bodies -> 0)
          ~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
             ~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
              ~ operator (root -> in_bodies -> 0 -> pattern -> elements -> 0)
             ~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0)
             ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> key)
                ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0 -> value)
                    ~ operator (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                   ~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                   ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1 -> key)
                      ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1 -> value)
                             ~~~~ expression (root -> in_bodies -> 0 -> body)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:hash_pattern,
      s(:pair,
        s(:sym, "a"),
        s(:int, "1")),
      s(:pair,
        s(:sym, "b"),
        s(:int, "2"))), nil,
    s(:true)), nil)
