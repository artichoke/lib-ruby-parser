--INPUT
case foo; in 1, "a", [], {} then nil; end
--LOCATIONS
~~~~ keyword (root)
                                      ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                            ~~~~ begin (root -> in_bodies -> 0)
          ~~ keyword (root -> in_bodies -> 0)
          ~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
             ~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
             ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0)
                ~ begin (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                  ~ end (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                ~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                     ~ begin (root -> in_bodies -> 0 -> pattern -> elements -> 2)
                      ~ end (root -> in_bodies -> 0 -> pattern -> elements -> 2)
                     ~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 2)
                         ~ begin (root -> in_bodies -> 0 -> pattern -> elements -> 3)
                          ~ end (root -> in_bodies -> 0 -> pattern -> elements -> 3)
                         ~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 3)
                                 ~~~ expression (root -> in_bodies -> 0 -> body)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:array_pattern,
      s(:int, "1"),
      s(:str, "a"),
      s(:array_pattern),
      s(:hash_pattern)), nil,
    s(:nil)), nil)
