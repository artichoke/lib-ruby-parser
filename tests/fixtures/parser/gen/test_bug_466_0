--INPUT
foo "#{(1+1).to_i}" do; end
--LOCATIONS
                    ~~ begin ()
                        ~~~ end ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression ()
~~~ selector (call)
~~~~~~~~~~~~~~~~~~~ expression (call)
    ~ begin (call/arg[0])
                  ~ end (call/arg[0])
    ~~~~~~~~~~~~~~~ expression (call/arg[0])
     ~~ begin (call/arg[0]/part[0])
                 ~ end (call/arg[0]/part[0])
     ~~~~~~~~~~~~~ expression (call/arg[0]/part[0])
             ~~~~ selector (call/arg[0]/part[0]/stmt[0])
       ~~~~~~~~~~ expression (call/arg[0]/part[0]/stmt[0])
       ~ begin (call/arg[0]/part[0]/stmt[0]/recv)
           ~ end (call/arg[0]/part[0]/stmt[0]/recv)
       ~~~~~ expression (call/arg[0]/part[0]/stmt[0]/recv)
         ~ selector (call/arg[0]/part[0]/stmt[0]/recv/stmt[0])
        ~~~ expression (call/arg[0]/part[0]/stmt[0]/recv/stmt[0])
        ~ expression (call/arg[0]/part[0]/stmt[0]/recv/stmt[0]/recv)
          ~ expression (call/arg[0]/part[0]/stmt[0]/recv/stmt[0]/arg[0])
--AST
s(:block,
  s(:send, nil, "foo",
    s(:dstr,
      s(:begin,
        s(:send,
          s(:begin,
            s(:send,
              s(:int, "1"), "+",
              s(:int, "1"))), "to_i")))), nil, nil)
