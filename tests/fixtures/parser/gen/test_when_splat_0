--INPUT
case foo; when 1, *baz; bar; when *foo; end
--LOCATIONS
~~~~ keyword ()
                                        ~~~ end ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression ()
     ~~~ name (expr)
     ~~~ expression (expr)
                      ~ begin (when_body[0])
          ~~~~ keyword (when_body[0])
          ~~~~~~~~~~~~~~~~~ expression (when_body[0])
               ~ expression (when_body[0]/arg[0])
                  ~ operator (when_body[0]/arg[1])
                  ~~~~ expression (when_body[0]/arg[1])
                   ~~~ name (when_body[0]/arg[1]/value)
                   ~~~ expression (when_body[0]/arg[1]/value)
                        ~~~ name (when_body[0]/body)
                        ~~~ expression (when_body[0]/body)
                                      ~ begin (when_body[1])
                             ~~~~ keyword (when_body[1])
                             ~~~~~~~~~ expression (when_body[1])
                                  ~ operator (when_body[1]/arg[0])
                                  ~~~~ expression (when_body[1]/arg[0])
                                   ~~~ name (when_body[1]/arg[0]/value)
                                   ~~~ expression (when_body[1]/arg[0]/value)
--AST
s(:case,
  s(:lvar, "foo"),
  s(:when,
    s(:int, "1"),
    s(:splat,
      s(:lvar, "baz")),
    s(:lvar, "bar")),
  s(:when,
    s(:splat,
      s(:lvar, "foo")), nil), nil)
