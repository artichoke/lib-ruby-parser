--INPUT
case foo; in [x, y, *z] then true; end
--LOCATIONS
~~~~ keyword (root)
                                   ~~~ end (root)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
     ~~~ expression (root -> expr)
                        ~~~~ begin (root -> in_bodies -> 0)
          ~~ keyword (root -> in_bodies -> 0)
          ~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
             ~ begin (root -> in_bodies -> 0 -> pattern)
                      ~ end (root -> in_bodies -> 0 -> pattern)
             ~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
              ~ name (root -> in_bodies -> 0 -> pattern -> elements -> 0)
              ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0)
                 ~ name (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                 ~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                    ~ operator (root -> in_bodies -> 0 -> pattern -> elements -> 2)
                    ~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 2)
                             ~~~~ expression (root -> in_bodies -> 0 -> body)
--AST
s(:case_match,
  s(:lvar, "foo"),
  s(:in_pattern,
    s(:array_pattern,
      s(:match_var, "x"),
      s(:match_var, "y"),
      s(:match_rest,
        s(:match_var, "z"))), nil,
    s(:true)), nil)
