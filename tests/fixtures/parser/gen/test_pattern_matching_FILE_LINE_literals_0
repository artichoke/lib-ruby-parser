--INPUT
        case [__FILE__, __LINE__ + 1, __ENCODING__]
          in [__FILE__, __LINE__, __ENCODING__]
        end

--LOCATIONS
        ~~~~ keyword (root)
                                                                                                            ~~~ end (root)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root)
             ~ begin (root -> expr)
                                                  ~ end (root -> expr)
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> expr)
              ~~~~~~~~ expression (root -> expr -> elements -> 0)
                                 ~ selector (root -> expr -> elements -> 1)
                        ~~~~~~~~~~~~ expression (root -> expr -> elements -> 1)
                        ~~~~~~~~ expression (root -> expr -> elements -> 1 -> recv)
                                   ~ expression (root -> expr -> elements -> 1 -> args -> 0)
                                      ~~~~~~~~~~~~ expression (root -> expr -> elements -> 2)
                                                              ~~ keyword (root -> in_bodies -> 0)
                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0)
                                                                 ~ begin (root -> in_bodies -> 0 -> pattern)
                                                                                                  ~ end (root -> in_bodies -> 0 -> pattern)
                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern)
                                                                  ~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 0)
                                                                            ~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 1)
                                                                                      ~~~~~~~~~~~~ expression (root -> in_bodies -> 0 -> pattern -> elements -> 2)
--AST
s(:case_match,
  s(:array,
    s(:__FILE__),
    s(:send,
      s(:__LINE__), "+",
      s(:int, "1")),
    s(:__ENCODING__)),
  s(:in_pattern,
    s(:array_pattern,
      s(:__FILE__),
      s(:__LINE__),
      s(:__ENCODING__)), nil, nil), nil)
