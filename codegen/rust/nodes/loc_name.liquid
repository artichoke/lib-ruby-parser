// This file is autogenerated by {{ template }}

use super::LocName;
use crate::{Node, Loc};
use crate::nodes::*;

impl LocName {
    {% for loc_name in loc_names -%}
    fn get_{{ loc_name.lower }}(node: &Node) -> Option<Loc> {
        match node {
            {%- for node in nodes -%}
                {%- for field in node.fields -%}
                    {%- if field.snakecase_name == loc_name.lower %}
            Node::{{ node.camelcase_name }}({{ node.camelcase_name }} { {{ loc_name.lower }}: loc, .. }) =>
                {%- if field.field_type == "Loc" -%}
                Some(*loc)
                {%- elsif field.field_type == "MaybeLoc" -%}
                *loc
                {%- endif -%},

                    {%- endif -%}
                {%- endfor -%}
            {%- endfor %}
            #[allow(unreachable_patterns)]
            _ => {
                panic!("node {} doesn't support {{ loc_name.lower }} loc", node.str_type())
            }
        }
    }
    {% endfor %}

    pub(crate) fn get(&self, node: &Node) -> Option<Loc> {
        match self {
            {% for loc_name in loc_names -%}
                Self::{{ loc_name.camelcase }} => Self::get_{{ loc_name.lower }}(node),
            {% endfor %}
        }
    }
}
